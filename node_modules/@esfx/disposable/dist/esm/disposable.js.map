{"version":3,"file":"disposable.js","sourceRoot":"","sources":["../../src/disposable.ts","../../../../internal/guards/dist/esm/index.js"],"names":[],"mappings":"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","sourcesContent":["/*!\r\n   Copyright 2019 Ron Buckton\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n\r\nimport /*#__INLINE__*/ { isFunction, isIterableObject, isObject } from \"@esfx/internal-guards\";\r\nimport { CreateScope, DisposeResources } from \"./internal/utils.js\";\r\n\r\n/**\r\n * Indicates an object that has resources that can be explicitly disposed.\r\n */\r\nexport interface Disposable {\r\n    /**\r\n     * Dispose this object's resources.\r\n     */\r\n    [Disposable.dispose](): void;\r\n}\r\n\r\n/**\r\n * Indicates an object that has resources that can be explicitly disposed.\r\n */\r\nexport class Disposable {\r\n    /**\r\n     * Creates a `Disposable` wrapper around a callback used to dispose of a resource.\r\n     * @deprecated Use `DisposableStack` or `{ [Disposable.dispose]() { ... } }` instead.\r\n     */\r\n    constructor(dispose: () => void) {\r\n        if (!isFunction(dispose)) throw new TypeError(\"Function expected: dispose\");\r\n\r\n        return Disposable.create(dispose);\r\n    }\r\n}\r\n\r\n/**\r\n * Indicates an object that has resources that can be explicitly disposed.\r\n */\r\nexport namespace Disposable {\r\n    /**\r\n     * A well-known symbol used to define an explicit resource disposal method on an object.\r\n     *\r\n     * NOTE: Uses `Symbol.dispose` if present.\r\n     */\r\n    export const dispose: unique symbol = typeof (Symbol as any)[\"dispose\"] === \"symbol\" ?\r\n        (Symbol as any)[\"dispose\"] :\r\n        Symbol.for(\"@esfx/disposable:Disposable.dispose\");\r\n\r\n    /**\r\n     * Emulate `using const` using `for..of`.\r\n     *\r\n     * NOTE: This is not spec-compliant and will not be standardized.\r\n     *\r\n     * @example\r\n     * ```ts\r\n     * // with `using const` (proposed)\r\n     * {\r\n     *   ...\r\n     *   using const x = expr, y = expr;\r\n     *   ...\r\n     * }\r\n     *\r\n     * // with `Disposable.scope()`:\r\n     * for (const { using, fail } of Disposable.scope()) {\r\n     *   try {\r\n     *     ...\r\n     *     const x = using(expr), y = using(expr);\r\n     *     ...\r\n     *   }\r\n     *   catch (e) {\r\n     *     fail(e);\r\n     *   }\r\n     * }\r\n     * ```\r\n     */\r\n    export function * scope(): Generator<DisposableScope, void, undefined> {\r\n        const context = CreateScope(\"sync\");\r\n        try {\r\n            context.state = \"initialized\";\r\n            yield context.scope;\r\n            context.state = \"exiting\";\r\n        }\r\n        finally {\r\n            context.state = \"done\";\r\n            DisposeResources(\"sync\", context.disposables, context.throwCompletion);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Yields each disposable in the iterable, disposing it when the generator resumes.\r\n     *\r\n     * This emulates `for (using const x of expr)`.\r\n     *\r\n     * NOTE: This is not spec-compliant and will not be standardized.\r\n     *\r\n     * @example\r\n     * ```ts\r\n     * // with `using const` (proposed)\r\n     * for (using const x of expr) {\r\n     *   ...\r\n     * }\r\n     *\r\n     * // with `Disposable.usingEach()`:\r\n     * for (const x of Disposable.usingEach(expr)) {\r\n     *   ...\r\n     * }\r\n     * ```\r\n     */\r\n    export function * usingEach(iterable: Iterable<Disposable | null | undefined>) {\r\n        if (!isIterableObject(iterable)) throw new TypeError(\"Object not iterable: iterable\");\r\n\r\n        // for (using const disposable of disposables) yield disposable;\r\n        for (const disposable of iterable) {\r\n            for (const { using, fail } of Disposable.scope()) try {\r\n                yield using(disposable);\r\n            } catch (e) { fail(e); }\r\n        }\r\n    }\r\n\r\n    const disposablePrototype = Disposable.prototype;\r\n    Object.defineProperty(disposablePrototype, Symbol.toStringTag, { configurable: true, value: \"Disposable\" });\r\n\r\n    /**\r\n     * Creates a `Disposable` wrapper around a callback used to dispose of a resource.\r\n     *\r\n     * NOTE: This is not spec-compliant and will not be standardized. It is preferred to use a `DisposableStack`\r\n     * or to implement `Disposable.dispose` yourself instead.\r\n     */\r\n    export function create(dispose: () => void): Disposable {\r\n        if (!isFunction(dispose)) throw new TypeError(\"Function expected: dispose\");\r\n\r\n        let disposed = false;\r\n        return Object.setPrototypeOf({\r\n            [Disposable.dispose]() {\r\n                if (!disposed) {\r\n                    disposed = true;\r\n                    const cb = dispose;\r\n                    dispose = undefined!;\r\n                    cb();\r\n\r\n                }\r\n            }\r\n        }, disposablePrototype);\r\n    }\r\n\r\n    /**\r\n     * Determines whether a value is Disposable.\r\n     *\r\n     * NOTE: This is not spec-compliant and will not be standardized.\r\n     */\r\n    export function hasInstance(value: unknown): value is Disposable {\r\n        return isObject(value)\r\n            && Disposable.dispose in value;\r\n    }\r\n}\r\n\r\nObject.defineProperty(Disposable, Symbol.hasInstance, Object.getOwnPropertyDescriptor(Disposable, \"hasInstance\")!);\r\n\r\n/**\r\n * Used to aproximate `using const` via `for..of`. See {@link Disposable.scope}.\r\n *\r\n * NOTE: This is not spec-compliant and will not be standardized.\r\n */\r\nexport interface DisposableScope {\r\n    /**\r\n     * Tracks a resource to be disposed at the end of a `for..of` statement. See {@link Disposable.scope}.\r\n     */\r\n    using<T extends Disposable | null | undefined>(value: T): T;\r\n\r\n    /**\r\n     * Tracks an exception from the body of a `for..of` statement. See {@link Disposable.scope}.\r\n     */\r\n    fail(error: unknown): void;\r\n}\r\n","/*\r\n   Copyright 2019 Ron Buckton\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n/*@internal*/\r\nexport function isFunction(value) {\r\n    return typeof value === \"function\";\r\n}\r\n/*@internal*/\r\nexport function isFunctionOrUndefined(value) {\r\n    return typeof value === \"function\" || value === undefined;\r\n}\r\n/*@internal*/\r\nexport function isObject(value) {\r\n    return typeof value === \"object\" && value !== null\r\n        || typeof value === \"function\";\r\n}\r\n/*@internal*/\r\nexport function isInstance(value, ctor) {\r\n    return !isMissing(value) && value instanceof ctor;\r\n}\r\n/*@internal*/\r\nexport function isUndefined(value) {\r\n    return value === undefined;\r\n}\r\n/*@internal*/\r\nexport function isDefined(value) {\r\n    return value === undefined;\r\n}\r\n/*@internal*/\r\nexport function isMissing(value) {\r\n    return value === null\r\n        || value === undefined;\r\n}\r\n/*@internal*/\r\nexport function isPresent(value) {\r\n    return value !== null\r\n        && value !== undefined;\r\n}\r\n/*@internal*/\r\nexport function isIterable(value) {\r\n    return value !== undefined\r\n        && value !== null\r\n        && Symbol.iterator in Object(value);\r\n}\r\n/*@internal*/\r\nexport function isIterableObject(value) {\r\n    return isObject(value) && Symbol.iterator in value;\r\n}\r\n/*@internal*/\r\nexport function isAsyncIterable(value) {\r\n    return value !== undefined\r\n        && value !== null\r\n        && Symbol.asyncIterator in Object(value);\r\n}\r\n/*@internal*/\r\nexport function isAsyncIterableObject(value) {\r\n    return isObject(value) && Symbol.asyncIterator in value;\r\n}\r\n/** @internal */\r\nexport function isIterator(value) {\r\n    return isObject(value)\r\n        && isFunction(value.next)\r\n        && isFunctionOrUndefined(value.throw)\r\n        && isFunctionOrUndefined(value.return)\r\n        && isFunctionOrUndefined(value[Symbol.iterator]);\r\n}\r\n;\r\n;\r\n;\r\n;\r\n/*@internal*/\r\nexport function isNumber(value) {\r\n    return typeof value === \"number\";\r\n}\r\n/*@internal*/\r\nexport function isPositiveFiniteNumber(value) {\r\n    return isFinite(value) && value >= 0;\r\n}\r\n/*@internal*/\r\nexport function isPositiveNonZeroFiniteNumber(value) {\r\n    return isFinite(value) && value > 0;\r\n}\r\n/*@internal*/\r\nexport function isInteger(value) {\r\n    return Object.is(value, value | 0);\r\n}\r\n/*@internal*/\r\nexport function isPositiveInteger(value) {\r\n    return isInteger(value) && value >= 0;\r\n}\r\n/*@internal*/\r\nexport function isBoolean(value) {\r\n    return typeof value === \"boolean\";\r\n}\r\n/*@internal*/\r\nexport function isString(value) {\r\n    return typeof value === \"string\";\r\n}\r\n/*@internal*/\r\nexport function isPropertyKey(value) {\r\n    return typeof value === \"string\"\r\n        || typeof value === \"symbol\"\r\n        || typeof value === \"number\";\r\n}\r\n/*@internal*/\r\nexport function isPrimitive(value) {\r\n    return typeof value !== \"function\"\r\n        && (typeof value !== \"object\" || value === null);\r\n}\r\n//# sourceMappingURL=index.js.map"]}