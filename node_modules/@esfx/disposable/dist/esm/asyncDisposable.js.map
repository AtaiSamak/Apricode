{"version":3,"file":"asyncDisposable.js","sourceRoot":"","sources":["../../src/asyncDisposable.ts","../../../../internal/guards/dist/esm/index.js"],"names":[],"mappings":"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","sourcesContent":["/*!\r\n   Copyright 2019 Ron Buckton\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n\r\nimport /*#__INLINE__*/ { isAsyncIterableObject, isFunction, isIterableObject, isObject } from \"@esfx/internal-guards\";\r\nimport { Disposable } from \"./disposable.js\";\r\nimport { CreateScope, DisposeResources } from \"./internal/utils.js\";\r\n\r\n/**\r\n * Indicates an object that has resources that can be explicitly disposed asynchronously.\r\n */\r\nexport interface AsyncDisposable {\r\n    /**\r\n     * Dispose this object's resources.\r\n     */\r\n    [AsyncDisposable.asyncDispose](): Promise<void>;\r\n}\r\n\r\n/**\r\n * Indicates an object that has resources that can be explicitly disposed asynchronously.\r\n *\r\n * NOTE: It is not necessary to subclass `AsyncDisposable`. Merely having an `[AsyncDisposable.asyncDispose]()` method is sufficient.\r\n */\r\nexport class AsyncDisposable {\r\n    /**\r\n     * Creates an `AsyncDisposable` wrapper around a callback used to dispose resources.\r\n     * @deprecated Use `AsyncDisposableStack` or `{ [AsyncDisposable.asyncDispose]() { ... } }` instead.\r\n     */\r\n    constructor(disposeAsync: () => void | PromiseLike<void>) {\r\n        if (!isFunction(disposeAsync)) throw new TypeError(\"Function expected: disposeAsync\");\r\n\r\n        return AsyncDisposable.create(disposeAsync);\r\n    }\r\n}\r\n\r\nexport namespace AsyncDisposable {\r\n    /**\r\n     * A well-known symbol used to define an async explicit resource disposal method on an object.\r\n     *\r\n     * NOTE: Uses `Symbol.asyncDispose` if present.\r\n     */\r\n    export const asyncDispose: unique symbol =\r\n        typeof (Symbol as any)[\"asyncDispose\"] === \"symbol\" ?\r\n            (Symbol as any)[\"asyncDispose\"] :\r\n            Symbol.for(\"@esfx/disposable:AsyncDisposable.asyncDispose\");\r\n\r\n    /**\r\n     * Emulate `using await const` using `for..await..of`.\r\n     *\r\n     * NOTE: This is not spec-compliant and will not be standardized.\r\n     *\r\n     * @example\r\n     * ```ts\r\n     * // with `using await const` (proposed)\r\n     * {\r\n     *   ...\r\n     *   using await const x = expr, y = expr;\r\n     *   ...\r\n     * }\r\n     *\r\n     * // with `AsyncDisposable.scope()`:\r\n     * for await (const { using, fail } of AsyncDisposable.scope()) {\r\n     *   try {\r\n     *     ...\r\n     *     const x = using(expr), y = using(expr);\r\n     *     ...\r\n     *   }\r\n     *   catch (e) {\r\n     *     fail(e);\r\n     *   }\r\n     * }\r\n     * ```\r\n     */\r\n    export async function * scope(): AsyncGenerator<AsyncDisposableScope, void, undefined> {\r\n        const context = CreateScope(\"async\");\r\n        try {\r\n            context.state = \"initialized\";\r\n            yield context.scope;\r\n            context.state = \"exiting\";\r\n        }\r\n        finally {\r\n            context.state = \"done\";\r\n            await DisposeResources(\"async\", context.disposables, context.throwCompletion);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Yields each disposable in the iterable, disposing it when the generator resumes.\r\n     *\r\n     * This emulates `for (using await const x of expr)`.\r\n     *\r\n     * NOTE: This is not spec-compliant and will not be standardized.\r\n     *\r\n     * @example\r\n     * ```ts\r\n     * // with `using await const` (proposed)\r\n     * for (using await const x of expr) {\r\n     *   ...\r\n     * }\r\n     * for await (using await const x of expr) {\r\n     *   ...\r\n     * }\r\n     *\r\n     * // with `Disposable.usingEach()`:\r\n     * for await (const x of Disposable.usingEach(expr)) {\r\n     *   ...\r\n     * }\r\n     * ```\r\n     */\r\n    export async function * usingEach(iterable: AsyncIterable<AsyncDisposable | Disposable | null | undefined> | Iterable<AsyncDisposable | Disposable | null | undefined | PromiseLike<AsyncDisposable | Disposable | null | undefined>>) {\r\n        if (!isAsyncIterableObject(iterable) && !isIterableObject(iterable)) throw new TypeError(\"Object not iterable: iterable\");\r\n\r\n        for await (const disposable of iterable) {\r\n            for await (const { using, fail } of AsyncDisposable.scope()) try {\r\n                yield using(disposable);\r\n            } catch (e) { fail(e); }\r\n        }\r\n    }\r\n\r\n    const asyncDisposablePrototype = AsyncDisposable.prototype;\r\n    Object.defineProperty(asyncDisposablePrototype, Symbol.toStringTag, { configurable: true, value: \"AsyncDisposable\" });\r\n\r\n    /**\r\n     * Creates an `AsyncDisposable` wrapper around a callback used to dispose resources.\r\n     *\r\n     * NOTE: This is not spec-compliant and will not be standardized. It is preferred to use an `AsyncDisposableStack`\r\n     * or to implement `AsyncDisposable.asyncDispose` yourself instead.\r\n     */\r\n    export function create(disposeAsync: () => void | PromiseLike<void>): AsyncDisposable {\r\n        if (!isFunction(disposeAsync)) throw new TypeError(\"Function expected: disposeAsync\");\r\n\r\n        let disposed = false;\r\n        return Object.setPrototypeOf({\r\n            async [AsyncDisposable.asyncDispose]() {\r\n                if (!disposed) {\r\n                    disposed = true;\r\n                    const cb = disposeAsync;\r\n                    disposeAsync = undefined!;\r\n                    await cb();\r\n                }\r\n            }\r\n        }, asyncDisposablePrototype);\r\n    }\r\n\r\n    /**\r\n     * Determines whether a value is `AsyncDisposable`.\r\n     *\r\n     * NOTE: This is not spec-compliant and will not be standardized.\r\n     */\r\n    export function hasInstance(value: unknown): value is AsyncDisposable {\r\n        return isObject(value) && AsyncDisposable.asyncDispose in value;\r\n    }\r\n}\r\n\r\nObject.defineProperty(AsyncDisposable, Symbol.hasInstance, Object.getOwnPropertyDescriptor(AsyncDisposable, \"hasInstance\")!);\r\n\r\nexport interface AsyncDisposableScope {\r\n    /**\r\n     * Tracks a resource to be disposed at the end of a `for..of` statement. See {@link AsyncDisposable.scope}.\r\n     */\r\n    using<T extends Disposable | AsyncDisposable | null | undefined>(value: T): T;\r\n\r\n    /**\r\n     * Tracks an exception from the body of a `for..of` statement. See {@link AsyncDisposable.scope}.\r\n     */\r\n    fail(error: unknown): void;\r\n}\r\n","/*\r\n   Copyright 2019 Ron Buckton\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n/*@internal*/\r\nexport function isFunction(value) {\r\n    return typeof value === \"function\";\r\n}\r\n/*@internal*/\r\nexport function isFunctionOrUndefined(value) {\r\n    return typeof value === \"function\" || value === undefined;\r\n}\r\n/*@internal*/\r\nexport function isObject(value) {\r\n    return typeof value === \"object\" && value !== null\r\n        || typeof value === \"function\";\r\n}\r\n/*@internal*/\r\nexport function isInstance(value, ctor) {\r\n    return !isMissing(value) && value instanceof ctor;\r\n}\r\n/*@internal*/\r\nexport function isUndefined(value) {\r\n    return value === undefined;\r\n}\r\n/*@internal*/\r\nexport function isDefined(value) {\r\n    return value === undefined;\r\n}\r\n/*@internal*/\r\nexport function isMissing(value) {\r\n    return value === null\r\n        || value === undefined;\r\n}\r\n/*@internal*/\r\nexport function isPresent(value) {\r\n    return value !== null\r\n        && value !== undefined;\r\n}\r\n/*@internal*/\r\nexport function isIterable(value) {\r\n    return value !== undefined\r\n        && value !== null\r\n        && Symbol.iterator in Object(value);\r\n}\r\n/*@internal*/\r\nexport function isIterableObject(value) {\r\n    return isObject(value) && Symbol.iterator in value;\r\n}\r\n/*@internal*/\r\nexport function isAsyncIterable(value) {\r\n    return value !== undefined\r\n        && value !== null\r\n        && Symbol.asyncIterator in Object(value);\r\n}\r\n/*@internal*/\r\nexport function isAsyncIterableObject(value) {\r\n    return isObject(value) && Symbol.asyncIterator in value;\r\n}\r\n/** @internal */\r\nexport function isIterator(value) {\r\n    return isObject(value)\r\n        && isFunction(value.next)\r\n        && isFunctionOrUndefined(value.throw)\r\n        && isFunctionOrUndefined(value.return)\r\n        && isFunctionOrUndefined(value[Symbol.iterator]);\r\n}\r\n;\r\n;\r\n;\r\n;\r\n/*@internal*/\r\nexport function isNumber(value) {\r\n    return typeof value === \"number\";\r\n}\r\n/*@internal*/\r\nexport function isPositiveFiniteNumber(value) {\r\n    return isFinite(value) && value >= 0;\r\n}\r\n/*@internal*/\r\nexport function isPositiveNonZeroFiniteNumber(value) {\r\n    return isFinite(value) && value > 0;\r\n}\r\n/*@internal*/\r\nexport function isInteger(value) {\r\n    return Object.is(value, value | 0);\r\n}\r\n/*@internal*/\r\nexport function isPositiveInteger(value) {\r\n    return isInteger(value) && value >= 0;\r\n}\r\n/*@internal*/\r\nexport function isBoolean(value) {\r\n    return typeof value === \"boolean\";\r\n}\r\n/*@internal*/\r\nexport function isString(value) {\r\n    return typeof value === \"string\";\r\n}\r\n/*@internal*/\r\nexport function isPropertyKey(value) {\r\n    return typeof value === \"string\"\r\n        || typeof value === \"symbol\"\r\n        || typeof value === \"number\";\r\n}\r\n/*@internal*/\r\nexport function isPrimitive(value) {\r\n    return typeof value !== \"function\"\r\n        && (typeof value !== \"object\" || value === null);\r\n}\r\n//# sourceMappingURL=index.js.map"]}